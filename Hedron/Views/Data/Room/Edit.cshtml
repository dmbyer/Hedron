@model Hedron.Models.RoomViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="w3-card w3-third w3-margin-top w3-margin-right w3-khaki">
    <div class="w3-container w3-cell-row">
        <div class="w3-cell" style="width:95%">
            <h2>Editing: @Model.Name</h2>
        </div>
        <div class="w3-float-tooltip w3-cell">
            <a asp-controller="Room" asp-route-id="@Model.Prototype" asp-action="Delete"><i class="material-icons w3-hover-blue-gray">delete</i></a>
            <span class="w3-float-tooltiptext">Delete</span>
        </div>
    </div>
    <div class="w3-container w3-sand">
        <form asp-action="Edit" autocomplete="off">
            <div class="w3-container w3-margin-top">
                <label asp-for="Prototype"></label>
                <div>
                    <input asp-for="Prototype" value="@Model.Prototype" readonly="readonly" class="w3-light-gray" />
                    <span asp-validation-for="Prototype" class="w3-red"></span>
                </div>
            </div>
            <div asp-validation-summary="ModelOnly" class="w3-red"></div>
            <div class="w3-container w3-margin-top">
                <label asp-for="Tier"></label>
                <div>
                    <input asp-for="Tier" class="w3-animate-input" style="width:30%" />
                    <span asp-validation-for="Tier" class="w3-red"></span>
                </div>
            </div>
            <div class="w3-container w3-margin-top">
                <label asp-for="Name"></label>
                <div>
                    <input asp-for="Name" class="w3-animate-input" style="width:30%" />
                    <span asp-validation-for="Name" class="w3-red"></span>
                </div>
            </div>
            <div class="w3-container w3-margin-top">
                <label asp-for="IsShop"></label>
                <div>
                    <input asp-for="IsShop" class="w3-animate-input" style="width:30%" />
                    <span asp-validation-for="IsShop" class="w3-red"></span>
                </div>
            </div>
            <div class="w3-container w3-margin-top">
                <label asp-for="Description"></label>
                <div>
                    <textarea asp-for="Description" class="w3-animate-input" style="width:50%" rows="5" cols="1">@Model.Description</textarea>
                    <span asp-validation-for="Description" class="w3-red"></span>
                </div>
            </div>
            <div class="w3-padding-32 w3-margin-left w3-margin-right">
                <input type="submit" value="Save" class="w3-button w3-blue-gray w3-hover-black" />
            </div>
        </form>
    </div>
    <div class="w3-container w3-sand">
        <div class="w3-topbar w3-margin-left w3-margin-right">
            <div class="w3-section">
                <a asp-action="Index"><i class="material-icons">arrow_back</i></a>
            </div>
        </div>
    </div>
</div>
<div class="w3-card w3-rest w3-margin-top">
    <header class="w3-container w3-khaki">
        <h2>Entities</h2>
    </header>
    <div class="w3-container w3-sand">
        <div class="w3-container w3-section w3-large">
            <a href="#" onclick="addEntity('AddItemStatic')"><i class="material-icons" style="vertical-align:-6px">add</i>Static</a>
            <a href="#" onclick="addEntity('AddWeapon')"><i class="material-icons" style="vertical-align:-6px">add</i>Weapon</a>
            <a href="#" onclick="addEntity('AddMob')"><i class="material-icons" style="vertical-align:-6px">add</i>Mob</a>
        </div>
    </div>
    <div id="divEntityList" class="w3-container w3-sand">
        @{ await Html.RenderPartialAsync("Partial/_entityList", Model.Entities); }
    </div>
</div>
<div class="w3-card w3-rest w3-margin-top">
    <header class="w3-container w3-khaki">
        <h2>Shop</h2>
    </header>
    <div class="w3-container w3-sand">
        <div class="w3-container w3-section w3-large">
        </div>
    </div>
    <div id="divShopItems" class="w3-container w3-sand">
        @{ await Html.RenderPartialAsync("Partial/Item/_itemListForShop", Model.ShopItems); }
    </div>
</div>
<div class="w3-card w3-rest w3-margin-top">
    <header class="w3-container w3-khaki">
        <h2>World Items</h2>
    </header>
    <div class="w3-container w3-sand">
        <div class="w3-container w3-section w3-large">
            <i class="material-icons" style="vertical-align:-6px">filter_list</i>
            <select id="levelFilter" onchange="filterItemList()">
                <option value="0">All</option>
                @for (var i = Hedron.System.Constants.MIN_TIER; i <= Hedron.System.Constants.MAX_TIER; i++)
                {
                    var friendlyTier = (new Hedron.Core.Entity.Property.Tier(i)).ToString();
                    <option value="@i">Tier @friendlyTier</option>
                }
            </select>
        </div>
    </div>
    <div id="divWorldItems" class="w3-container w3-sand">
        @{ await Html.RenderPartialAsync("Partial/Item/_filterableItemList", new List<Hedron.Models.BaseEntityViewModel>()); }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
    function addEntity(entityActionType) {
        let request = new XMLHttpRequest();

        request.open('POST', '/Room/' + entityActionType, true);

        request.setRequestHeader("XSRF-TOKEN", document.getElementsByName('__RequestVerificationToken')[0].value);
        request.setRequestHeader("Content-Type", "application/json");
        request.responseType = "document";

        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById('divEntityList').innerHTML = this.responseXML.body.innerHTML;
            }
        };

        request.send(@Model.Prototype);
    }

    function filterItemList() {
        let request = new XMLHttpRequest();

        request.open('GET', ('/World/ItemList?levelFilter=' + document.getElementById('levelFilter').selectedIndex), true);
        request.responseType = "document";

        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById('divWorldItems').innerHTML = this.responseXML.body.innerHTML;
            }
        };

        request.send();
    }

    function removeShopItem(id) {
        let request = new XMLHttpRequest();

        request.open('POST', '/Room/RemoveShopItem', true);
        request.responseType = "document";

        request.setRequestHeader("XSRF-TOKEN", document.getElementsByName('__RequestVerificationToken')[0].value);
        request.setRequestHeader("Content-Type", "application/json");

        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById('divShopItems').innerHTML = this.responseXML.body.innerHTML;
            }
        };

        let req = { roomID: @Model.Prototype, itemID: id };
        request.send(JSON.stringify(req));
    }

    function addShopItem(id) {
        let request = new XMLHttpRequest();

        request.open('POST', '/Room/AddShopItem', true);
        request.responseType = "document";

        request.setRequestHeader("XSRF-TOKEN", document.getElementsByName('__RequestVerificationToken')[0].value);
        request.setRequestHeader("Content-Type", "application/json");

        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById('divShopItems').innerHTML = this.responseXML.body.innerHTML;
            }
        };

        let req = { roomID: @Model.Prototype, itemID: id };
        request.send(JSON.stringify(req));
    }

    function refreshShopList() {
        let request = new XMLHttpRequest();
        let roomID = @Model.Prototype;

        request.open('GET', '/Room/ShopList/' + roomID, true);
        request.responseType = "document";

        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById('divShopItems').innerHTML = this.responseXML.body.innerHTML;
            }
        };

        request.send();
    }

    $(document).ready(filterItemList());
    </script>
}